<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
						http://www.springframework.org/schema/beans/spring-beans.xsd  
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.0.xsd"  >
						
<!-- 
<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="location" value="mysqlDatabase.properties"></property>
</bean>
-->    
<!-- 上面的导入配置文件也可用下面简洁的方法 -->
<context:property-placeholder location="mysqlDatabase.properties"></context:property-placeholder>

<bean id="data"  class="com.alibaba.druid.pool.DruidDataSource">      <!-- DruidDataSource.java的作用就是把外部配置文件存到它的属性里 -->
	<property name="driverClassName" value="${jdbc.driver}"></property>
	<property name="url"  value="${jdbc.url}"></property>
	<property name="username" value="${jdbc.user}"></property>
	<property name="password" value="${jdbc.password}"></property>
</bean>

<!-- 使用Spring框架自带的JdbcTemplate,并把属性配置文件导入到里面 -->
<bean id="jdbcTemplate"  class="org.springframework.jdbc.core.JdbcTemplate">
	<property name="dataSource" ref="data"></property>
</bean>


</beans>