package com.mybatis.param.test;

import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

import com.mybatis.param.bean.Emp;
import com.mybatis.param.mapper.EmpParamMapper;

/*
#{}和${}的用法区别，见emp-mapper.xml文件
 */
public class ParamTest001 {
	
	public static void main(String[] args) {
		
		InputStream in=null;
		try {
			
			in=Resources.getResourceAsStream("mybatis-param-config.xml");
			SqlSessionFactory sqlSessionFactory=new SqlSessionFactoryBuilder().build(in);
			SqlSession  sqlSession=sqlSessionFactory.openSession(true);      //开启自动处理事务在括号内加“true”
			//SqlSession  sqlSession=sqlSessionFactory.openSession();                    
			EmpParamMapper mapper=sqlSession.getMapper(EmpParamMapper.class);
			
			/*一，获取自动生成递增的值,
			 *(1) 如果在emp-mapper.xml映射文件中没有加：<..insert.. useGeneratedKeys="true" keyProperty="id">,则下面的sout输出是null,因为你赋值就是null
			 *一旦<insert>加上这几个属性,MyBatis框架底层就会返回自动递增的值，并存进PreparedStatement对象内，即可获取到了
			 *(2)JDBC原始操作代码，方法重载
			 * PreparedStatement  ps=conn.prepareStatement(String sql,int autoGeneratedKeys)
			 *若autoGeneratedKeys赋值为1，则返回自动递增值，为0则不返回
			 * */
			Emp emp01=new Emp(null,"Landa","male",60,44);
			mapper.addEmp(emp01);
			System.out.println(emp01.getId());
			//sqlSession.commit();
			
			/*二，只根据一个便俩个查询，#{}和${}的用法区别，见emp-mapper.xml文件
			 * */
			Emp emp02=mapper.getEmpById(1);
			System.out.println("emp02:"+emp02);
			
			/*三，根据多个变量查询员工，#{}和${}的用法区别
			 * */
			Emp emp03=mapper.getEmpByArgs(2, "Mike");
			System.out.println("emp03:"+emp03);
			
			/*四，根据Map集合查询单个员工信息,把查询条件封装进Map集合，返回查询结果Emp对象
			 * */
			Map<Object,Object> map=new HashMap<>();   //因为Emp对象的实例变量时多种类型，所以这里用Object,以后建议都用String类型的
			map.put("myId", 3);          //向Map集合中添加查询条件，并且自定义好了key的名字，供emp-mapper.xml使用，不需再用默认的param1,2..了
			map.put("myEname", "Jane");
			System.out.println(map);
			Emp emp04=mapper.getEmpByMap(map);
			System.out.println("emp04:"+emp04);
			
			//5，注解@Param自定义Map集合的key名字，不用4中的声明Map集合了，@Param的value就是自定义的key名称
			Emp emp05=mapper.getEmpByAtParam(1, "Jack");
			System.out.println("emp05==>"+emp05);
			
		}catch(IOException e) {
			e.printStackTrace();
		}finally {
			if(in != null) {
				try {
					in.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	}
}
