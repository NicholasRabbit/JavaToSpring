<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
						http://www.springframework.org/schema/beans/spring-beans.xsd  
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.0.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd " >
						
	<!--首先确定Spring框架扫描注解类的范围，只是扫描@Component，没有用到@Aspect等AspectJ相关注解-->
	<context:component-scan base-package="com.springframe.aopXml"></context:component-scan>
	
	<aop:config>
		
		<aop:aspect  ref="myLogAopXml">    <!-- 这个标签确定AOP切面类，其默认id是首字母改为小写的类名 --> 
			
			<!--aop:before标签就相当于@Before注解，method指定前置通知的方法 -->
			<!-- <aop:before method="beforeHandler"  pointcut="execution(public int com.springframe.aopXml.Caculator.plus(int,int))"></aop:before> -->
			<aop:after  method="afterHandler"  pointcut="execution(* com.springframe.aopXml.*.*(..))" ></aop:after>  <!-- 切入点也可使用通配符代替 --> 
			
			<!-- 以上切入点表达式可用<aop:pointcut>标签指定，相当于AspectJ中的注解@Pointcut -->
			<aop:pointcut expression="execution(* com.springframe.aopXml.*.*(..))" id="pointCut"></aop:pointcut> 
			<aop:before method="beforeHandler"  pointcut-ref="pointCut"></aop:before>  
		</aop:aspect>     						<!-- 注意使用<aop:pointcut>标签时，要用pointcut-ref属性 --> 
	</aop:config>
		

</beans>			