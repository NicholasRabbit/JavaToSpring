<!--
(1)这是个合法的web.xml文件，并且一个web项目只能有一个此文件
(2)此文件是配置的请求路径，即用户输入到地址栏的路径和后台程序员写的程序(class文件)之间的关系
(3)此文件不可随意写，格式固定，需按照sun公司的Servlet相关规定，否则无法解析，也就无法调用java程序
-->

<!--这个web.xml文件有错，因为这里最开始encoding设置的是ISO-8859-1,也叫Latin-1,
 因为个人开始写这个xml文件时EditPlus默认编码时ANSI，而Tomcat按照设置的ISO-8859-1来解析，所以http:404错误
 解决方案：
 以后统一把Tomcat自带的web.xml文件复制到个人项目里，个人手写的xml编码格式要与encoding=“..”的值一致。
 建议全部统一为UTF-8，国际编码
 可把Tomcat里UTF-8格式的webapps/ROOT下的web.xml复制过来，注意是整个文件复制，然后在里面更改内容
-->
<?xml version="1.0" encoding="ISO-8859-1"?>    
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
  version="3.0">

<servlet>
	<servlet-name>thisIsServletName</servlet-name>
	<servlet-class>ServletTest002</servlet-class>  
	<!--这里写的是程序员编写的java程序名，即放到WEB-INF里面classes目录里编译好的ServletTest001.class文件-->
</servlet>

<!--此标签编写用户输入在地址栏的路径与后台java程序(*.class)之间的对应关系,映射关系
-->
<servlet-mapping>   <!--注意此处mapping要双写p-->
	<servlet-name>thisIsServletName</servlet-name>  <!--这里表示本类里的servlet名字-->
	
	<!--
	可以编写多个<url-pattern>标签,但里面内容必须以"/"开头，因为它代表的是浏览器地址栏的路径
	不需要写项目名称:/A002-ServletTest001    
	-->
	<url-pattern>
		/abc    <!--用户只要在地址栏输入此路径便可调用对应的Servlet.class文件，运行程序-->
	</url-pattern>

	
</serlet-mapping>
   

</web-app>
